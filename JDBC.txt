< JDBC >

Java DataBase Connection


1. 드라이버 로딩 : 일반적으로 생성자에서 하고 딱 한번만 로딩한다.


public Test() {
	try {
		Class.forName("oracle.jdbc.OracleDriver");
	 -> 드라이버 객체 생성 : 
	  Class의 forname( )를 이용한다, 풀 패키지 명만 알고있으면 객체 만들 수 있음.
	  forName( )를 실행하면 try~catch문을 유도한다. 만들어주면 된다.
		System.out.println("드라이버 로딩 성공");
	} catch (ClassNotFoundException e) {
		System.out.println("드라이버 로딩 실패");
		e.printStackTrace();
	}
}

	==> 이 상태로 실행. 콘솔에 "드라이버 로딩 성공" 이 뜨면 로딩 완료됨


2. 커넥션 만들기 

public void me1() {
	connection변수를 하나 만들어서 null값을 주고 예외처리 해줌
	무조건 close되어야 하기 때문에 try~catch~finally문으로 처리한다.
		
	Connection conn = null;

	커넥션은 지역변수로 선언해서 사용하여야 한다.
	try~catch~finally문에서 사용해야 하기 때문에 지역변수로 선언해서
	어디서든 사용할 수 있게 함	

	try {
		conn = DriverManager.getConnection
			("jdbc:oracle:thin:@localhost:1521:xe", "ezen", "ezen");

	-> Java.sql에 있는 DriverManager에서 getConnection( )을 호출
	-> 파라미터에 ( url , 오라클id , 비밀번호 ) 를 입력한다.
	-> URL확인하는 법 : Database Connections -> New Oracle 에서 마우스 우클릭 
	    -> properties -> Driver Properties 에서 Connection URL 확인

		System.out.println("커넥션 연결 성공");

	} catch (Exception e) {
		System.out.println("preparedStatement 생성 실패");
		e.printStackTrace();
	} finally {
		try {
			if(pstmt != null) {
				pstmt.close();
			}
			if(conn != null) {
				conn.close();
			}
		} catch (Exception e2) {
			e2.printStackTrace();
		}
	}
}





2. DAO (Data Acsess Object) 클래스

- 테이블 하나당 DAO클래스 하나
- Java 프로그램과 Connection을 연결해 줌